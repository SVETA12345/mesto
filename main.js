(()=>{"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var n=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupSelector=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var n,r;return n=e,(r=[{key:"openPopup",value:function(){this._popupSelector.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"closePopup",value:function(){this._popupSelector.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.closePopup()}},{key:"setEventListeners",value:function(){var e=this;this._popupSelector.addEventListener("mousedown",(function(t){t.target.classList.contains("popup_opened")&&e.closePopup(),t.target.classList.contains("popup__close")&&e.closePopup()}))}}])&&t(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}();function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==r(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=a(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},i.apply(this,arguments)}function u(e,t){return u=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},u(e,t)}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}var c=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&u(e,t)}(f,e);var t,n,c,l,s=(c=f,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=a(c);if(l){var n=a(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===r(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function f(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,f),(t=s.call(this,e))._popupPhoto=document.querySelector(".popup__photo"),t._popupPhotoSubtitle=document.querySelector(".popup__subtitle"),t}return t=f,(n=[{key:"openPopup",value:function(e,t){this._popupPhoto.src=t,this._popupPhoto.alt=e,this._popupPhotoSubtitle.textContent=e,i(a(f.prototype),"openPopup",this).call(this)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),f}(n),l={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==s(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==s(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===s(o)?o:String(o)),r)}var o}var p=function(){function e(t,n,r,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._apiLikeDlete=r,this._apiLikeAdd=n,this._data=t,this._name=t.name,this._image=t.link,this._handleCardClick=o}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return"f497e1c825cc1aeec8db23f3"==this._data.owner._id?this._templateSelector=".template_my_card":this._templateSelector=".template_user",document.querySelector(this._templateSelector).content.querySelector(".place").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".place__photo"),this._setEventListeners(),this._cardImage.src=this._image,this._cardImage.alt=this._name,this._element.querySelector(".place__title").textContent=this._name,this._element.querySelector(".place__subtitle").textContent=this._data.likes.length,this.renderLike(this._element),this._element}},{key:"_isMyLike",value:function(e){var t=!1;console.log(e.likes);for(var n=0;n<e.likes.length;n++)if(console.log(t),"f497e1c825cc1aeec8db23f3"==e.likes[n]._id){t=!0;break}return t}},{key:"renderLike",value:function(e){var t=this._isMyLike(this._data);this._element=e,t?this._element.querySelector(".place__like").classList.add("place__like_active"):this._element.querySelector(".place__like").classList.remove("place__like_active")}},{key:"toggleLike",value:function(){return this._isMyLike(this._data)?this._apiLikeDlete(this._data._id):this._apiLikeAdd(this._data._id)}},{key:"clickLike",value:function(e,t,n,r){return this._countLikes=r,t.target.classList.toggle("place__like_active"),2==t.target.className.split(" ").length?(n.querySelector(".place__subtitle").textContent=this._countLikes+1,this._countLikes=this._countLikes+1):(n.querySelector(".place__subtitle").textContent=this._countLikes-1,this._countLikes-=1),this._countLikes}},{key:"_setEventListeners",value:function(){var e=this;this._cardImage.addEventListener("click",(function(){e._handleCardClick()}))}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==y(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==y(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===y(o)?o:String(o)),r)}var o}var h=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formsConfig=t,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._formsConfig.inputSelector)),this._btnSaveElement=this._formElement.querySelector(this._formsConfig.submitButtonSelector)}var t,n;return t=e,(n=[{key:"_inputValid",value:function(e){e.validity.valid?this._hideInputError(e):(this._showInputError(e,e.validationMessage),this._disableButton())}},{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"_setEventListeners",value:function(){var e=this;this._disableButton(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._inputValid(t),e._inputList.every((function(e){return e.validity.valid}))&&e._enableButton()}))}))}},{key:"_showInputError",value:function(e,t){var n=document.querySelector(".".concat(e.id,"-error"));e.classList.add(this._formsConfig.inputErrorClass),n.textContent=t,n.classList.add(this._formsConfig.errorClass)}},{key:"_disableButton",value:function(){this._btnSaveElement.classList.add(this._formsConfig.inactiveButtonClass),this._btnSaveElement.setAttribute("disabled","disabled")}},{key:"_enableButton",value:function(){this._btnSaveElement.classList.remove(this._formsConfig.inactiveButtonClass),this._btnSaveElement.removeAttribute("disabled")}},{key:"_hideInputError",value:function(e){var t=document.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._formsConfig.inputErrorClass),t.textContent="",t.classList.remove(this._formsConfig.errorClass)}},{key:"resetValidation",value:function(){var e=this;this._disableButton(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==m(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==m(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===m(o)?o:String(o)),r)}var o}var v=function(){function e(t,n){var r=t.data,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._renderedItems.reverse().forEach((function(t){e._renderer(t)}))}},{key:"setItem",value:function(e){this._container.prepend(e)}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==_(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==_(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===_(o)?o:String(o)),r)}var o}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},g.apply(this,arguments)}function k(e,t){return k=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},k(e,t)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var P=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e,t){var n,r=t.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._handleFormSubmit=r,n._popupSaveBtn=document.querySelector(".popup__button"),n._inputList=n._popupSelector.querySelectorAll(".popup__input"),n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"_close",value:function(e){g(w(u.prototype),"closePopup",this).call(this),e.target.reset()}},{key:"setBtnText",value:function(e){this._popupSaveBtn.textContent=e}},{key:"setEventListeners",value:function(){var e=this;this._popupSelector.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues()),e._close(t)})),g(w(u.prototype),"setEventListeners",this).call(this)}}])&&S(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(n);function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==j(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==j(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===j(o)?o:String(o)),r)}var o}var O=function(){function e(t){var n=t.selectorName,r=t.selectorJob;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameProfile=document.querySelector(n),this._jobProfile=document.querySelector(r)}var t,n;return t=e,n=[{key:"getUserInfo",value:function(){return{name:this._nameProfile.textContent,job:this._jobProfile.textContent}}},{key:"setUserInfo",value:function(e,t){console.log(t.sendDataProfile(e.name,e.job)),t.sendDataProfile(e.name,e.job),this._nameProfile.textContent=e.name,this._jobProfile.textContent=e.job}}],n&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function C(e){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(e)}function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==C(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==C(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===C(o)?o:String(o)),r)}var o}var T=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this._headers=t.headers}var t,n;return t=e,n=[{key:"getAllTasks",value:function(){return fetch(this._url,{method:"GET",headers:this._headers}).then((function(e){if(e.ok)return e.json()}))}},{key:"sendDataProfile",value:function(e,t){return fetch(this._url,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((function(e){return e.json()}))}},{key:"createMestoCard",value:function(e,t){return fetch(this._url,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then((function(e){return e.json()}))}},{key:"deleteCard",value:function(){return fetch(this._url,{method:"DELETE",headers:this._headers}).then((function(e){if(e.ok)return e.json()}))}},{key:"likeAdd",value:function(){return fetch(this._url,{method:"PUT",headers:this._headers}).then((function(e){if(e.ok)return e.json()}))}},{key:"likeDelete",value:function(){return fetch(this._url,{method:"DELETE",headers:this._headers}).then((function(e){if(e.ok)return e.json()}))}},{key:"avatarProfile",value:function(e){return fetch(this._url,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((function(e){return e.json()}))}}],n&&L(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function q(e){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},q(e)}function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==q(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==q(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===q(o)?o:String(o)),r)}var o}function R(){return R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},R.apply(this,arguments)}function x(e,t){return x=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},x(e,t)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var A=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&x(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(r);if(o){var n=B(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===q(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t,n=e.btnYes,r=e.popupSelector,o=e.apiDeleteMyCard;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,r))._btnYes=document.querySelector(n),t._apiDeleteMyCard=o,t}return t=u,(n=[{key:"_deleteCard",value:function(){this._cardElement.remove(),this._apiDeleteMyCard(this._cardId),console.log("cardId",this._cardId)}},{key:"_setEventListeners",value:function(){var e=this;R(B(u.prototype),"setEventListeners",this).call(this),this._btnYes.addEventListener("click",(function(t){t.preventDefault(),e._deleteCard(),R(B(u.prototype),"closePopup",e).call(e)}))}},{key:"open",value:function(e,t){R(B(u.prototype),"openPopup",this).call(this),this._cardId=e._id,this._cardElement=t,this._setEventListeners()}}])&&I(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(n);function D(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i,u,a=[],c=!0,l=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);c=!0);}catch(e){l=!0,o=e}finally{try{if(!c&&null!=n.return&&(u=n.return(),Object(u)!==u))return}finally{if(l)throw o}}return a}}(e,t)||function(e,t){if(e){if("string"==typeof e)return V(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?V(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function V(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var M=document.getElementById("button_avatar"),N=document.querySelector(".popup_type_avatar"),z=document.querySelector(".avatar_open_popup"),F=(document.querySelector(".popup__close_theme_card"),document.querySelector(".place__close"),document.querySelector(".popup_type_card")),U=document.querySelector(".popup_type_profile"),J=document.querySelector(".profile__edit"),Y=(document.querySelector(".popup__close"),document.querySelector(".profile__name")),H=document.querySelector(".profile__second-name"),G=(document.querySelector(".form_profile_name"),document.querySelector(".form__name_theme_first")),$=document.querySelector(".form__name_theme_job"),K=document.querySelector(".places"),Q=document.querySelector(".profile__add"),W=new h(l,N),X=new h(l,F),Z=new h(l,U),ee=(new n(".popup_type_close"),new A({btnYes:".popup__close_theme_card",popupSelector:".popup_type_close",apiDeleteMyCard:function(e){new T({url:"https://mesto.nomoreparties.co/v1/cohort-63/cards/".concat(e),headers:{authorization:"1c8d4f00-a15b-43e6-a0ec-40bf4915d387","Content-Type":"application/json"}}).deleteCard()}})),te=new T({url:"https://mesto.nomoreparties.co/v1/cohort-63/cards",headers:{authorization:"1c8d4f00-a15b-43e6-a0ec-40bf4915d387","Content-Type":"application/json"}}),ne=new T({url:"https://mesto.nomoreparties.co/v1/cohort-63/users/me",headers:{authorization:"1c8d4f00-a15b-43e6-a0ec-40bf4915d387","Content-Type":"application/json"}}),re=new T({url:"https://mesto.nomoreparties.co/v1/cohort-63/users/me/avatar",headers:{authorization:"1c8d4f00-a15b-43e6-a0ec-40bf4915d387","Content-Type":"application/json"}});function oe(e){return new T({url:"https://mesto.nomoreparties.co/v1/cohort-63/cards/".concat(e,"/likes"),headers:{authorization:"1c8d4f00-a15b-43e6-a0ec-40bf4915d387","Content-Type":"application/json"}}).likeAdd()}function ie(e){return new T({url:"https://mesto.nomoreparties.co/v1/cohort-63/cards/".concat(e,"/likes"),headers:{authorization:"1c8d4f00-a15b-43e6-a0ec-40bf4915d387","Content-Type":"application/json"}}).likeDelete()}var ue=te.getAllTasks();ne.getAllTasks().then((function(e){Y.textContent=e.name,H.textContent=e.about})),ue.then((function(e){var t=new v({data:e,renderer:function(e){if("f497e1c825cc1aeec8db23f3"==e.owner._id){var n=D(se(e),2),r=n[0];n[1].addEventListener("click",(function(){ee.open(e,r)})),t.setItem(r)}else{var o=function(e){var t=new p(e,oe,ie,(function(){le.openPopup(e.name,e.link)})),n=t.generateCard(),r=e.likes.length;return n.querySelector(".place__like").addEventListener("click",(function(e){t.toggleLike().then((function(o){r=t.clickLike(o,e,n,r)}))})),n}(e);t.setItem(o)}}},".places");t.renderItems()})),ne.getAllTasks().then((function(e){M.style.backgroundImage="url(".concat(e.avatar,")"),M.style.backgroundRepeat="no-repeat"}));var ae=new O({selectorName:".profile__name",selectorJob:".profile__second-name"}),ce=new P(".popup_type_profile",{handleFormSubmit:function(e){return ae.setUserInfo(e,ne)}}),le=new c(".popup_type_image");function se(e){var t=new p(e,oe,ie,(function(){le.openPopup(e.name,e.link)})),n=t.generateCard(),r=e.likes.length;n.querySelector(".place__like").addEventListener("click",(function(e){t.toggleLike().then((function(o){r=t.clickLike(o,e,n,r)}))}));var o=n.querySelector(".place__close");return[n,o]}J.addEventListener("click",(function(){var e=ae.getUserInfo();G.value=e.name,$.value=e.job,ce.openPopup(),Z.resetValidation()}));var fe=new P(".popup_type_card",{handleFormSubmit:function(e){return function(e){var t=te.createMestoCard(e.name,e.link);fe.setBtnText("Сохранение..."),t.then((function(e){var t=D(se(e),2),n=t[0],r=t[1];K.prepend(n),r.addEventListener("click",(function(){ee.open(e,n)}))})).catch((function(e){return console.log(e)})).finally(fe.setBtnText("Создать"))}(e)}}),pe=new P(".popup_type_avatar",{handleFormSubmit:function(e){return function(e){pe.setBtnText("Сохранение...");var t=re.avatarProfile(e.link);console.log(t),t.then((function(e){M.style.backgroundImage="url(".concat(e.avatar,")"),M.style.backgroundRepeat="no-repeat"})).catch((function(e){return console.log(e)})).finally(pe.setBtnText("Сохранить"))}(e)}});Q.addEventListener("click",(function(){X.resetValidation(),fe.openPopup()})),z.addEventListener("click",(function(){W.resetValidation(),pe.openPopup()})),fe.setEventListeners(),X.enableValidation(),pe.setEventListeners(),W.enableValidation(),Z.enableValidation(),ce.setEventListeners(),le.setEventListeners()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,